<?xml version="1.0" encoding="utf-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~ Repository: https://github.com/simplexidev/sdbuildsdk                                                                ~
~ Package:    SimplexiDev.Build.Sdk                                                                                    ~
~ File:       /sdk/Sdk.props                                                                                           ~
~ License:    https://github.com/simplexidev/sdbuildsdk/blob/main/LICENSE.md                                           ~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <UsingSimplexiDevBuildSdk>true</UsingSimplexiDevBuildSdk>
    <SimplexiDevBuildSdkVersion>8.0.0</SimplexiDevBuildSdkVersion>
  </PropertyGroup>

  <!-- SimplexiDev.Build.props Imports
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup>
    <ImportSimplexiDevBuildProps Condition="'$(ImportSimplexiDevBuildProps)'!='false'">true</ImportSimplexiDevBuildProps>
  </PropertyGroup>
  <PropertyGroup Condition="'$(ImportSimplexiDevBuildProps)'=='true' AND '$(SimplexiDevBuildPropsPath)'==''">
    <_SimplexiDevBuildPropsFile Condition="'$(_SimplexiDevBuildPropsFile)' == ''">SimplexiDev.Build.props</_SimplexiDevBuildPropsFile>
    <_SimplexiDevBuildPropsBasePath Condition="'$(_SimplexiDevBuildPropsBasePath)'==''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), '$(_SimplexiDevBuildPropsFile)'))</_SimplexiDevBuildPropsBasePath>
    <SimplexiDevBuildPropsPath Condition="'$(_SimplexiDevBuildPropsBasePath)' != '' and '$(_SimplexiDevBuildPropsFile)' != ''">$([System.IO.Path]::Combine('$(_SimplexiDevBuildPropsBasePath)', '$(_SimplexiDevBuildPropsFile)'))</SimplexiDevBuildPropsPath>
  </PropertyGroup>
  <Import Condition="'$(ImportSimplexiDevBuildProps)'=='true' AND Exists('$(SimplexiDevBuildPropsPath)')"
          Project="$(SimplexiDevBuildPropsPath)" />


  <!-- Continuous Integration
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup Condition="'$(CIBuildNumber)'==''">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <Configuration>Release</Configuration>
  </PropertyGroup>

  <!-- Repository Information
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup>
    <RepositoryPath Condition="'$(RepositoryPath)'==''">$(MSBuildProjectDirectory)</RepositoryPath>
    <RepositoryOwner Condition="'$(RepositoryOwner)'==''">SimplexiDev</RepositoryOwner>
    <RepositoryName Condition="'$(RepositoryName)'==''"></RepositoryName>
    <VersionBaseline Condition="'$(VersionBaseline)'==''">1.0.0</VersionBaseline>
    <Version Condition="'$(Version)'==''">1.0.0</Version>
    <Version Condition="'$(Version)'!='' AND '$(CIBuildNumber)'!=''">$(Version)-b$(CIBuildNumber)</Version>
    <RootNamespace Condition="'$(RootNamespace)'==''">SimplexiDev</RootNamespace>
    <RepositoryCreationYear Condition="'$(RepositoryCreationYear)'==''">$([System.DateTime]::Now.ToString('yyyy'))</RepositoryCreationYear>
    <RepositoryBuildPath Condition="'$(RepositoryBuildPath)'==''">$([System.IO.Path]::Combine($(RepositoryPath),'.build'))</RepositoryBuildPath>
    <RepositorySourcesPath Condition="'$(RepositorySourcesPath)'==''">$([System.IO.Path]::Combine($(RepositoryPath),'sources'))</RepositorySourcesPath>
  </PropertyGroup>

  <PropertyGroup>
  </PropertyGroup>

  <!-- ProjectType Property
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup Condition="'$(ProjectType)'==''">
    <ProjectType Condition="$(MSBuildProjectName.StartsWith('SimplexiDev.')) AND $(MSBuildProjectName.EndsWith('.Sdk')) AND '$(ProjectType)'==''">Sdk</ProjectType>
    <ProjectType Condition="$(MSBuildProjectName.StartsWith('SimplexiDev.Apps.')) AND $(MSBuildProjectName.EndsWith('.Apps')) AND '$(ProjectType)'==''">App</ProjectType>
    <ProjectType Condition="$(MSBuildProjectName.StartsWith('SimplexiDev.')) AND $(MSBuildProjectName.EndsWith('.Tests')) AND '$(ProjectType)'==''">Tests</ProjectType>
    <ProjectType Condition="$(MSBuildProjectName.StartsWith('SimplexiDev.Build.Tools.')) AND '$(ProjectType)'==''">Tool</ProjectType>
    <ProjectType Condition="$(MSBuildProjectName.StartsWith('SimplexiDev.Build.Generators.')) AND '$(ProjectType)'==''">Generator</ProjectType>
    <ProjectType Condition="'$(ProjectType)'==''">Library</ProjectType>
  </PropertyGroup>

  <!-- Output Directories
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>

    <BaseOutputPath>$([System.IO.Path]::Combine($(RepositoryBuildPath),'bin'))</BaseOutputPath>
    <OutputPath>$([System.IO.Path]::Combine($(BaseOutputPath),$(MSBuildProjectName)))</OutputPath>
    <BaseIntermediateOutputPath>$([System.IO.Path]::Combine($(RepositoryBuildPath),'obj'))</BaseIntermediateOutputPath>
    <IntermediateOutputPath>$([System.IO.Path]::Combine($(BaseIntermediateOutputPath),$(MSBuildProjectName)))</IntermediateOutputPath>
  </PropertyGroup>

  <!-- Output Directories (ProjcetType-specific)
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup>
    <PackageOutputPath Condition="'$(IsPackable)'=='true' AND '$(ProjectType)'!='Tests' AND '$(Configuration)'=='Release'">$([System.IO.Path]::Combine($(RepositoryBuildPath),'pkg'))</PackageOutputPath>
    <DocumentationFile Condition="'$(IsPackable)'=='true' AND '$(ProjectType)'=='Library' AND '$(Configuration)'=='Release'">$([System.IO.Path]::Combine($(RepositoryBuildPath),'doc','$(MSBuildProjectName).xml'))</DocumentationFile>
  </PropertyGroup>
  
  <!-- Build Properties
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup>
    <LangVersion>12.0</LangVersion>
    <AssemblyName>$(MSBuildProjectName)</AssemblyName>
    <AssemblyTitle>$(MSBuildProjectName)</AssemblyTitle>
    <NeutralLanguage>en</NeutralLanguage>
    <EnableDefaultItems>false</EnableDefaultItems>
    <ImplicitUsings>disable</ImplicitUsings>
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <!-- Configuration-Specific Build Properties
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <DefineConstants>$(DefineConstants);SDEV;$(MSBuildProjectName.ToUpper().Replace('.', '_'))</DefineConstants>
    <DefineConstants Condition="'$(Configuration)' == 'Release'">$(DefineConstants);RELEASE</DefineConstants>
    <Optimize Condition="'$(Configuration)' == 'Debug'">false</Optimize>
    <Optimize Condition="'$(Configuration)' == 'Release'">true</Optimize>
    <DebugType Condition="'$(Configuration)' == 'Debug'">full</DebugType>
    <DebugType Condition="'$(Configuration)' == 'Release'">embedded</DebugType>
  </PropertyGroup>

  <!-- ProjectType-Specific Properties
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup>
    <TargetFramework Condition="'$(ProjectType)'=='Generator' OR '$(ProjectType)'=='Sdk'">netstandard2.0</TargetFramework>
    <TargetFramework Condition="'$(TargetFramework)'==''">net8.0</TargetFramework>
    <OutputType Condition="'$(ProjectType)'=='Tool'">Exe</OutputType>
    <OutputType Condition="'$(ProjectType)'=='App'">WinExe</OutputType>
    <OutputType Condition="'$(OutputType)'==''">Library</OutputType>
    <GenerateDocumentationFile Condition="'$(ProjectType)'=='Library'">true</GenerateDocumentationFile>
    <GenerateDocumentationFile Condition="'$(ProjectType)'!='Library'">false</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- IsPackable Property
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup  Condition="'$(IsPackable)'==''">
    <IsPackable Condition="'$(ProjectType)'!='Tests' AND '$(ProjectType)'!='App'">true</IsPackable>
    <IsPackable Condition="'$(IsPackable)'!='true'">false</IsPackable>
  </PropertyGroup>

  <!-- Package Properties
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup Condition="'$(IsPackable)' == 'true'">
    <PackAsTool Condition="'$(ProjectType)'=='Tool'">true</PackAsTool>
    <PackageType Condition="'$(ProjectType)'=='Sdk'">MSBuildSdk</PackageType>
    <SuppressDependenciesWhenPacking Condition="'$(ProjectType)'=='Sdk'">true</SuppressDependenciesWhenPacking>
    <DevelopmentDependency Condition="'$(ProjectType)'=='Sdk'">true</DevelopmentDependency>
    <PackageReadmeFile>\README.md</PackageReadmeFile>
    <EnablePackageValidation>true</EnablePackageValidation>
    <PackageValidationBaselineVersion>$(VersionBaseline)</PackageValidationBaselineVersion>
    <RepositoryType>git</RepositoryType>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedAllSources>true</EmbedAllSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <Copyright Condition="'$(RepositoryCreationYear)'=='$([System.DateTime]::Now.ToString(yyyy))'">Copyright Â© $([System.DateTime]::Now.ToString(yyyy)) $(RepositoryOwner), et al. All Rights Reserved.</Copyright>
    <Copyright Condition="'$(RepositoryCreationYear)'!='$([System.DateTime]::Now.ToString(yyyy))'">Copyright Â© $(RepositoryCreationYear)-$([System.DateTime]::Now.ToString(yyyy)) $(RepositoryOwner), et al. All Rights Reserved.</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageId>$(MSBuildProjectName)</PackageId>
    <RepositoryUrl>https://github.com/$(RepositoryOwner.ToLower())/$(RepositoryName.ToLower())</RepositoryUrl>
    <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl>
    <GeneratePackageOnBuild Condition="'$(Configuration)' == 'Debug'">false</GeneratePackageOnBuild>
    <GeneratePackageOnBuild Condition="'$(Configuration)' == 'Release'">true</GeneratePackageOnBuild>
  </PropertyGroup>

  <!-- Microsoft.NET.Sdk Import 
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <Import Condition="'$(UsingMicrosoftNETSdk)' != 'true'" Project="Sdk.props" Sdk="Microsoft.NET.Sdk"/>

</Project>