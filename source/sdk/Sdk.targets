<?xml version="1.0" encoding="utf-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~ Repository: https://github.com/simplexidev/sdbuildsdk                                                                ~
~ Package:    SimplexiDev.Build.Sdk                                                                                    ~
~ File:       /sdk/Sdk.targets                                                                                         ~
~ License:    https://github.com/simplexidev/sdbuildsdk/blob/main/LICENSE.md                                           ~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- SimplexiDev.Build.targets Imports
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <PropertyGroup>
    <ImportSimplexiDevBuildTargets Condition="'$(ImportSimplexiDevBuildTargets)'!='false'">true</ImportSimplexiDevBuildTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(ImportSimplexiDevBuildTargets)'=='true' AND '$(SimplexiDevBuildTargetsPath)'==''">
    <_SimplexiDevBuildTargetsFile Condition="'$(_SimplexiDevBuildTargetsFile)' == ''">SimplexiDev.Build.targets</_SimplexiDevBuildTargetsFile>
    <_SimplexiDevBuildTargetsBasePath Condition="'$(_SimplexiDevBuildTargetsBasePath)'==''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), '$(_SimplexiDevBuildTargetsFile)'))</_SimplexiDevBuildTargetsBasePath>
    <SimplexiDevBuildTargetsPath Condition="'$(_SimplexiDevBuildTargetsBasePath)' != '' and '$(_SimplexiDevBuildTargetsFile)' != ''">$([System.IO.Path]::Combine('$(_SimplexiDevBuildTargetsBasePath)', '$(_SimplexiDevBuildTargetsFile)'))</SimplexiDevBuildTargetsPath>
  </PropertyGroup>
  <Import Condition="'$(ImportSimplexiDevBuildTargets)'=='true' AND Exists('$(SimplexiDevBuildTargetsPath)')"
          Project="$(SimplexiDevBuildTargetsPath)" />

  <!-- SimplexiDev.Build.Sdk.targets Import
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <Import Project="../build/SimplexiDev.Build.Sdk.targets" />

  <!-- Custom Tasks/Targets
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <UsingTask TaskName="_ValidateSDBSDKCIProperties" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <ReturnValue ParameterType="System.Boolean" Output="true" />
      <BuildHost ParameterType="System.String" Required="true" />
      <Branch ParameterType="System.String" Required="true" />
      <BuildNumber ParameterType="System.String" Required="true" />
      <PullNumber ParameterType="System.String" Required="false" />
    </ParameterGroup>
    <Task>
     <Using Namespace="System.IO" />
     <Using Namespace="System.Collections.Generic" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        bool retVal = true;
        List<string> validBuildHosts = new List<string>()
        {
            "GitHub",
            //"GitLab",
            //"AzurePipelines",
            //"TravisCI",
            //"CircleCI",
            //"AppVeyor"
        };
        // Validate the `BuildHost` property.
        if (string.IsNullOrWhitespace(BuildHost) || !validBuildHosts.Contains(BuildHost)
            retVal = false;

        // Validate the `BuildNumber` property.
        if (string.IsNullOrWhitespace(BuildNumber) || !ulong.TryParse(BuildNumber, out ulong _))
            retVal = false;

        // Validate the `BuildBranch` property.
        if (string.IsNullOrWhitespace(Branch) || Branch.Contains(' '))
            return false;

        // Validate the `PullNumber` property, if set.
        if (!string.IsNullOrWhitespace(PullNumber) && !uint.TryParse(PullNumber, out uint _))
            return false;

        ReturnValue = retVal;
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <Target Name="ValidateContinuousIntegrationProperties" Condition="'$(IsCIBuild)'=='true'">
    <_ValidateSDBSDKCIProperties BuildHost="$(CIBuildHost)" Branch="$(CIBranchName)" BuildNumber="$(CIBuildNumber)" PullNumber="$(CIPullNumber)">
      <Output PropertyName="_SimplexiDevCIProperiesAreValid" TaskParameter="ReturnValue" />
    </_ValidateSDBSDKCIProperties>
    <Error Condition="'$(_SimplexiDevCIProperiesAreValid)' == 'false'" Text="CI-specific properties in the SimplexiDev.Build.Sdk are invalid." Code="SDBSDK0004" ContinueOnError="ErrorAndStop" />
    <PropertyGroup>
      <CIBuildDetailsAreValid>_SimplexiDevCIProperiesAreValid</CIBuildDetailsAreValid>
    </PropertyGroup>
  </Target>

  <!--TODO: The `Namespace` parameter needs to be checked to ensure it is valid as a namespace (only alpha-numeric charaters, can be segmented by using a `.`, each segment cannot start with a number). -->
  <UsingTask TaskName="_ValidateSDBSDKRepositoryDetails" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <ReturnValue ParameterType="System.Boolean" Output="true" />
      <Owner ParameterType="System.String" Required="true" />
      <RepoName ParameterType="System.String" Required="true" />
      <Namespace ParameterType="System.String" Required="true" />
      <Version ParameterType="System.String" Required="true" />
      <BaselineVersion ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
     <Using Namespace="System" />
     <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        bool retVal = true;
        if (string.IsNullOrWhitespace(Owner) || Owner.Contains(' '))
            retVal = false;
        if (string.IsNullOrWhitespace(Name) || RepoName.Contains(' '))
            retVal = false;
        if (string.IsNullOrWhitespace(Namespace))
            retVal = false;
        if (string.IsNullOrWhitespace(Version) || !System.Version.TryParse(Version, out System.Version _))
            retVal = false;
        if (string.IsNullOrWhitespace(BaselineVersion) || !System.Version.TryParse(BaselineVersion, out System.Version _))
            retVal = false;
        ReturnValue = retVal;
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <Target Name="ValidateRepositoryProperties">
    <_ValidateSDBSDKRepositoryDetails Owner="$(RepositoryOwner)" RepoName="$(RepositoryName)" Namespace="$(RepositoryNamespace)" Version="$(RepositoryVersion)" BaselineVersion="$(RepositoryBaselineVersion)">
      <Output PropertyName="_SimplexiDevRepositoryProperiesAreValid" TaskParameter="ReturnValue" />
    </_ValidateSDBSDKRepositoryDetails>
    <Error Condition="'$(_SimplexiDevRepositoryProperiesAreValid)' == 'false'" Text="Repository-specific properties in the SimplexiDev.Build.Sdk properties are invalid." Code="SDBSDK0001" ContinueOnError="ErrorAndStop" />
    <PropertyGroup>
      <RepositoryDetailsAreValid>_SimplexiDevRepositoryProperiesAreValid</RepositoryDetailsAreValid>
    </PropertyGroup>
  </Target>

  <Target Name="ValidateProjectType">
    <Error Condition="'$(ProjectType)'!='Library' AND '$(ProjectType)'!='Tests' AND '$(ProjectType)'!='Tool' AND '$(ProjectType)'!='Generator' AND '$(ProjectType)'!='App' AND '$(ProjectType)'!='Sdk'"
           Text="The `ProjectType` property in the SimpleiDev.Build.Sdk is invalid."
           Code="SDBSDK0002"
           ContinueOnError="ErrorAndStop" />
    <PropertyGroup>
      <ProjectTypeIsValid>true</ProjectTypeIsValid>
    </PropertyGroup>
  </Target>

  <UsingTask TaskName="_GenerateSDBSDKRepositoryVersion" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <ReturnValue ParameterType="System.String" Output="true" />
      <IsCIBuild ParameterType="System.Boolean" Required="true" />
      <RepoVersion ParameterType="System.String" Required="true" />
      <Branch ParameterType="System.String" Required="true" />
      <BuildNumber ParameterType="System.String" Required="true" />
      <PullNumber ParameterType="System.String" Required="false" />
    </ParameterGroup>
    <Task>
     <Using Namespace="System.IO" />
     <Using Namespace="System.Collections.Generic" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        string retVal = RepoVersion;

        if (IsCIBuild)
        {
            if (!string.IsNullOrWhitespace(PullNumber) && uint.TryParse(PullNumber, out uint pullNumber))
                retVal += $"-b{BuildNumber}.pull{pullNumber}";
            else
                retVal += $"-b{BuildNumber}.{Branch.Replace("/", ".")}";
        }
        else
            retVal += $"-local";

        ReturnValue = retVal;
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <Target Name="GenerateRepositoryVersion" DependsOnTargets="ValidateContinuousIntegrationProperties;ValidateRepositoryProperties">
    <_GenerateSDBSDKRepositoryVersion IsCIBuild="$(IsCIBuild)" RepoVersion="$(RepositoryVersion)" Branch="$(CIBranchName)" BuildNumber="$(CIBuildNumber)" PullNumber="$(CIPullNumber)">
      <Output PropertyName="_SimplexiDevRepositoryVersion" TaskParameter="ReturnValue" />
    </_GenerateSDBSDKRepositoryVersion>
    <Error Condition="'$(_SimplexiDevRepositoryVersion)' == ''" Text="Repository- version in the SimplexiDev.Build.Sdk is empty or invalid." Code="SDBSDK0003" ContinueOnError="ErrorAndStop" />
    <PropertyGroup>
      <Version>_SimplexiDevRepositoryVersion</Version>
    </PropertyGroup>
  </Target>

  <PropertyGroup>
    <InitialTargets>ValidateContinuousIntegrationProperties;ValidateRepositoryProperties;ValidateProjectType;GenerateRepositoryVersion;$(InitialTargets)</InitialTargets>
  </PropertyGroup>

  <!-- Microsoft.NET.Sdk Import
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk"/>

</Project>